### THIS FILE IS GENERATED BY setup.rb ###
#
### Template file is templates/vagrant/Vagrantfile.template
###   Config file is cluster-config/standard-calico.yaml
#
# coding: utf-8
# -*- mode: ruby -*-
# vi: set ft=ruby :

# host network interfaice
#bridge_if = "en0: Wi-Fi (Wireless)"
bridge_if = "eno1"


vm_spec = [
{"name":"master1","cpu":2,"memory":2048,"box":"ubuntu/bionic64","private_ip":"172.16.11.21","public_ip":"192.168.1.101","role":"master","playbook":"setup_linux.yaml","comment":"Master node #1"},
{"name":"node1","cpu":1,"memory":1024,"box":"ubuntu/bionic64","private_ip":"172.16.11.31","playbook":"setup_linux.yaml","role":"worker","comment":"Worker node #1"},
{"name":"node2","cpu":1,"memory":1024,"box":"ubuntu/bionic64","private_ip":"172.16.11.32","playbook":"setup_linux.yaml","role":"worker","comment":"Worker node #2"},
{"name":"bootnode","cpu":1,"memory":1024,"box":"ubuntu/bionic64","private_ip":"172.16.11.10","playbook":"setup_linux.yaml","comment":"Bootstap node"},
]

Vagrant.configure("2") do |config|
  vm_spec.each do |spec|
    config.vm.define spec[:name] do |v|
      v.vm.box = spec[:box]
      v.vm.hostname = spec[:name]
      v.vm.network :private_network,ip: spec[:private_ip]
      if !( spec[:public_ip].nil? )
        v.vm.network :public_network,ip:  spec[:public_ip], bridge: bridge_if
      end	     
      v.vm.provider "virtualbox" do |vbox|
        vbox.gui = false
        vbox.cpus = spec[:cpu]
        vbox.memory = spec[:memory]
        i = 1
        if !( spec[:storage].nil? )        
          spec[:storage].each do |vol|
            vdisk = "vdisks/sd-" + spec[:name] + "-" + i.to_s + ".vdi"
            if not File.exist?(vdisk) then
              vbox.customize [
                'createmedium', 'disk',
                '--filename', vdisk,
                '--format', 'VDI',
                '--size', vol * 1024 ]
            end
            vbox.customize [
              'storageattach', :id,
              '--storagectl', 'SCSI',
              '--port', 1 + i,
              '--device', 0,
              '--type', 'hdd',
              '--medium', vdisk]
            i = i + 1
          end
        end
      end
      v.vm.synced_folder ".", "/vagrant", owner: "vagrant",
                            group: "vagrant", mount_options: ["dmode=700", "fmode=700"]

      v.vm.provision "ansible_local" do |ansible|
        ansible.playbook       = "playbook/" + spec[:playbook]
        ansible.install_mode   = "pip3"
        #ansible.version        = "2.9.11"
        ansible.verbose        = false
        ansible.install        = true
        ansible.limit          = spec[:name] 
        ansible.inventory_path = "hosts_vagrant"
      end
    
      v.vm.provision "shell", inline: <<-SHELL
        if [ "bootnode" == `/bin/hostname` ]
        then
          su vagrant -c "cd /vagrant && ansible -i hosts_k8s all -m ping"	
          su vagrant -c "cd /vagrant && ansible-playbook -i hosts_k8s playbook/install_k8s.yaml"
        fi
      SHELL
    end
  end
end
