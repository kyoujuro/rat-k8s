#
#
# kubelet Kubernetes Configuration File
#

- name: Ensure kubeconfig Home directory
  file:
    path: "{{ kubeconfig }}"
    state: directory
    owner: vagrant
    group: vagrant

- shell: |
    kubectl config set-cluster kubernetes \
      --certificate-authority=ca.pem \
      --embed-certs=true \
      --server=https://{{ KUBERNETES_PUBLIC_ADDRESS }}:6443 \
      --kubeconfig={{ kubeconfig }}/{{ item.name }}.kubeconfig

    kubectl config set-credentials system:node:{{ item.name }} \
      --client-certificate={{ item.name }}.pem \
      --client-key={{ item.name }}-key.pem \
      --embed-certs=true \
      --kubeconfig={{ kubeconfig }}/{{ item.name }}.kubeconfig

    kubectl config set-context default \
      --cluster=kubernetes \
      --user=system:node:{{ item.name }} \
      --kubeconfig={{ kubeconfig }}/{{ item.name }}.kubeconfig

    kubectl config use-context default --kubeconfig={{ kubeconfig}}/{{ item.name }}.kubeconfig

  args:
    chdir: "{{ ca_home }}"
  loop: "{{ nodes }}"

- file:
    path: "{{ kubeconfig }}/{{ item.name }}.kubeconfig"
    mode: '0644'
  loop: "{{ nodes }}"


#
# kube-proxy Kubernetes Configuration File
#
- name: kube-proxy Kubernetes Configuration File
  shell: |
    kubectl config set-cluster kubernetes \
      --certificate-authority=ca.pem \
      --embed-certs=true \
      --server=https://{{ KUBERNETES_PUBLIC_ADDRESS }}:6443 \
      --kubeconfig={{ kubeconfig }}/kube-proxy.kubeconfig

    kubectl config set-credentials system:kube-proxy \
      --client-certificate=kube-proxy.pem \
      --client-key=kube-proxy-key.pem \
      --embed-certs=true \
      --kubeconfig={{ kubeconfig }}/kube-proxy.kubeconfig

    kubectl config set-context default \
      --cluster=kubernetes \
      --user=system:kube-proxy \
      --kubeconfig={{ kubeconfig }}/kube-proxy.kubeconfig

    kubectl config use-context default --kubeconfig={{ kubeconfig }}/kube-proxy.kubeconfig

  args:
    chdir: "{{ ca_home }}"
  loop: "{{ nodes }}"
- file:
    path: "{{ kubeconfig }}/kube-proxy.kubeconfig"
    mode: '0644'

#
# kube-controller-manager Kubernetes Configuration File
#
- name: kube-controller-manager Kubernetes Configuration File
  shell: |
    kubectl config set-cluster kubernetes \
      --certificate-authority=ca.pem \
      --embed-certs=true \
      --server=https://127.0.0.1:6443 \
      --kubeconfig={{ kubeconfig }}/kube-controller-manager.kubeconfig

    kubectl config set-credentials system:kube-controller-manager \
      --client-certificate=kube-controller-manager.pem \
      --client-key=kube-controller-manager-key.pem \
      --embed-certs=true \
      --kubeconfig={{ kubeconfig }}/kube-controller-manager.kubeconfig

    kubectl config set-context default \
      --cluster=kubernetes \
      --user=system:kube-controller-manager \
      --kubeconfig={{ kubeconfig }}/kube-controller-manager.kubeconfig

    kubectl config use-context default --kubeconfig={{ kubeconfig }}/kube-controller-manager.kubeconfig

  args:
    chdir: "{{ ca_home }}"
  loop: "{{ nodes }}"


#
# kube-scheduler Kubernetes Configuration File
#
- name: kube-scheduler Kubernetes Configuration File
  shell: |
    kubectl config set-cluster kubernetes \
      --certificate-authority=ca.pem \
      --embed-certs=true \
      --server=https://127.0.0.1:6443 \
      --kubeconfig={{ kubeconfig }}/kube-scheduler.kubeconfig

    kubectl config set-credentials system:kube-scheduler \
      --client-certificate=kube-scheduler.pem \
      --client-key=kube-scheduler-key.pem \
      --embed-certs=true \
      --kubeconfig={{ kubeconfig }}/kube-scheduler.kubeconfig

    kubectl config set-context default \
      --cluster=kubernetes \
      --user=system:kube-scheduler \
      --kubeconfig={{ kubeconfig }}/kube-scheduler.kubeconfig

    kubectl config use-context default --kubeconfig={{ kubeconfig }}/kube-scheduler.kubeconfig

  args:
    chdir: "{{ ca_home }}"
  loop: "{{ nodes }}"



#
# The admin Kubernetes Configuration File
#
- name: admin Kubernetes Configuration File
  shell: |
    kubectl config set-cluster kubernetes \
      --certificate-authority=ca.pem \
      --embed-certs=true \
      --server=https://{{ KUBERNETES_PUBLIC_ADDRESS }}:6443 \      
      --kubeconfig={{ kubeconfig }}/admin.kubeconfig

    kubectl config set-credentials admin \
      --client-certificate=admin.pem \
      --client-key=admin-key.pem \
      --embed-certs=true \
      --kubeconfig={{ kubeconfig }}/admin.kubeconfig

    kubectl config set-context default \
      --cluster=kubernetes \
      --user=admin \
      --kubeconfig={{ kubeconfig }}/admin.kubeconfig

    kubectl config use-context default --kubeconfig={{ kubeconfig }}/admin.kubeconfig

  args:
    chdir: "{{ ca_home }}"
  loop: "{{ nodes }}"
- file:
    path: "{{ kubeconfig }}/admin.kubeconfig"
    mode: '0644'

###############################################

- name: Encryption Config File
  shell: head -c 32 /dev/urandom | base64
  register: ENCRYPTION_KEY

- debug: msg="{{ ENCRYPTION_KEY }}"

- template:  
    src: encryption-config.yaml.j2
    dest: "{{ kubeconfig }}/encryption-config.yaml"
    owner: vagrant
    group: vagrant
    mode: '0644'

