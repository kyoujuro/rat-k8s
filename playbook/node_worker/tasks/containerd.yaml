
##########################################################
- name: start configuration  
  file:
    path: /etc/cni/net.d
    state: directory
    owner: root
    group: root
    mode: '0755'
- file:
    path: /opt/cni/bin
    state: directory
    owner: root
    group: root
    mode: '0755'

#
# Flannelを使わないでブリッジ設定でポッドネットワークを構築する
#

- include_vars: /vagrant/playbook/vars/main.yaml
- name: deploy /etc/cni/net.d/10-bridge.conf
  template:
    src: "10-bridge.conf.{{ item.name }}"
    dest: /etc/cni/net.d/10-bridge.conf
    owner: root
    group: root
    mode: '0644'
  when: ansible_facts.hostname == item.name and pod_network == "bridge"
  loop: "{{ nodes }}"


- template:
    src: 99-loopback.conf
    dest: /etc/cni/net.d
    owner: root
    group: root
    mode: '0644'

- name: Configure CNI Networking
  unarchive:
    src: /mnt/download/cni-plugins-linux-amd64-{{ cni_plugins }}.tgz
    dest: /opt/cni/bin/
    owner: root
    group: root
    mode: '0755'

##########################################################


- name: install containerd
  unarchive:
    src: /mnt/download/containerd-{{ containerd_version }}.linux-amd64.tar.gz
    dest: /usr/local
    owner: root
    group: root
    mode: '0755'

- copy:
    src: /mnt/download/runc.amd64
    dest: /usr/local/bin/runc
    owner: root
    group: root
    mode: '0755'

- name: Configure containerd
  file:
    path: /etc/containerd
    state: directory
    owner: root
    group: root
    mode: '0755'

- template:
    src: config.toml
    dest: /etc/containerd
    owner: root
    group: root
    mode: '0644'

- template:
    src: containerd.service
    dest: /etc/systemd/system
    owner: root
    group: root
    mode: '0644'

- name: Start the Worker Services
  systemd:
    name: containerd  
    state: started
    daemon_reload: yes
    enabled: yes
- wait_for:
    timeout: 30
    
########
- unarchive:
    src: /mnt/download/crictl-{{ crictl_version }}-linux-amd64.tar.gz
    dest: /usr/local/bin
    owner: root
    group: root
    mode: '0755'
########
