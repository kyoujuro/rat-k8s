- name: vagrant user add root group
  user:
    name: vagrant
    groups: root
    append: yes

#####
- name: Install Ubuntu package
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - nfs-common
    - ruby
    - emacs-nox

##
## カーネル設定変更
##
- name: Configure Kernel parameter
  include_tasks: kernel-param.yaml

    
- name: Ensure /etc/hosts
  template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: '0644'

- name: check ssh-key existing
  stat:
    path: /vagrant/keys/id_rsa.pub
  register: regi_ssh_key
    
#- debug: msg="{{ ssh_key }}"

- name: create ssh-key
  command: ssh-keygen -t rsa -N '' -f id_rsa
  args:
    executable: /bin/bash
    chdir: /vagrant/keys
  when: regi_ssh_key.stat.exists == false

#############################

- name: Ensure group 'admin' exists
  group:
    name:  "{{ cluster_admin }}"
    state: present
- name: Add the user 'admin' with a bash shell,
  user:
    name:  "{{ cluster_admin }}"
    shell: /bin/bash
    group: "{{ cluster_admin }}"
- name: add sudoers
  template:
    src:  sudor.j2
    dest: "/etc/sudoers.d/{{ cluster_admin }}"
    owner: root
    group: root
    mode: '0440'
- name: mkdir .ssh directory
  file:
    path: "/home/{{ cluster_admin }}/.ssh"
    state: directory
    owner: "{{ cluster_admin }}"
    group: "{{ cluster_admin }}"
    mode: '0700'

    
- name: Copy id_rsa to cluster_admin  home
  command: cp {{ shared_fs }}/keys/id_rsa /home/{{ cluster_admin }}/.ssh/id_rsa
- file:
    path: /home/{{ cluster_admin }}/.ssh/id_rsa
    owner: "{{ cluster_admin }}"
    group: "{{ cluster_admin }}"
    mode: '0400'

- name: Copy id_rsa.pub to  cluster_admin  home
  command: cp {{ shared_fs }}/keys/id_rsa.pub /home/{{ cluster_admin }}/.ssh/id_rsa.pub
- file:
    path: "/home/{{ cluster_admin }}/.ssh/id_rsa.pub"
    owner: "{{ cluster_admin }}"
    group: "{{ cluster_admin }}"
    mode: '0644'

- name: add authorized_keys
  shell: |
     cat {{ shared_fs }}/keys/id_rsa.pub >> /home/{{ cluster_admin }}/.ssh/authorized_keys
- file:
    path: "/home/{{ cluster_admin }}/.ssh/authorized_keys"
    owner: "{{ cluster_admin }}"
    group: "{{ cluster_admin }}"
    mode: '0400'

    
- name: Copy config
  command: cp {{ shared_fs }}/keys/config /home/{{ cluster_admin }}/.ssh/config
- file:
    path: "/home/{{ cluster_admin }}/.ssh/config"
    owner: "{{ cluster_admin }}"
    group: "{{ cluster_admin }}"
    mode: '0400'

#########
#
# コンテナのファイルシステム領域の設定
#
#- debug: msg="sw_use_sdc_cr = {{ sw_use_sdc_cr }}"


- name: Create CR FS
  filesystem:
    fstype: ext4
    dev: /dev/sdc
  when: sw_use_sdc_cr == "yes" and ansible_facts.devices.sdc is defined
    
- name: Create mount point
  file:
    path: /var/lib/containerd
    owner: root
    group: root
    mode: '0755'
    state: directory
  when: sw_use_sdc_cr == "yes" and ansible_facts.devices.sdc is defined

- name: Mount up device by /dev/sdc
  mount:
    path: /var/lib/containerd
    src:  /dev/sdc
    fstype: ext4
    state: mounted
  when: sw_use_sdc_cr == "yes" and ansible_facts.devices.sdc is defined


