
#
# mlb1 と mlb2 の間で代表アドレスを設定する
#
- name: Install Ubuntu package
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - libssl-dev
    - build-essential
    
#
# KeepAlived
#
- name: Downloading keepalived
  stat:
    path: "{{ r_download_dir }}/keepalived-{{ keepalived_version }}.tar.gz"
  when:
    - ansible_facts.hostname is match("bootnode") 
  register: regi_keepalived

- get_url:
    url: "https://www.keepalived.org/software/keepalived-{{ keepalived_version }}.tar.gz"
    dest: "{{ r_download_dir }}"
    mode: '0644'
  when:
    - ansible_facts.hostname is match("bootnode")     
    - regi_keepalived.stat.exists == false

- name: extracted  keepalived
  stat:
    path: "{{ r_download_dir }}/keepalived-{{ keepalived_version }}/README.md"
  when:
    - ansible_facts.hostname is match("bootnode") 
  register: regi_keepalived_extra

    
- unarchive:
    src: "{{ r_download_dir }}/keepalived-{{ keepalived_version }}.tar.gz"
    dest: "{{ r_download_dir }}"
  when:
    - ansible_facts.hostname is match("bootnode") 
    - regi_keepalived_extra.stat.exists == false

- debug: msg="{{ r_download_dir }}/keepalived-{{ keepalived_version }}"
    
- name: Build keepalived
  shell: |
    ./configure
    make
  args:
    chdir: "{{ r_download_dir }}/keepalived-{{ keepalived_version }}"
  when:
    - ansible_facts.hostname is match("bootnode") 
    - regi_keepalived_extra.stat.exists == false


##
## bootnode で keepalived のビルドが完了したら、mlbs/elbsの待機をリリースする
##
- name: Touch the same file, but add/remove some permissions
  file:
    path: "{{ r_download_dir }}/keepalived_start.lock"
    state: touch
    mode: u+rw,g-wx,o-rwx  
  when: ansible_facts.hostname is match("bootnode")
  
##
## bootnode でビルドが完了するまで待つ
##
- name: Wait until the lock file is removed
  wait_for:
    path: "{{ r_download_dir }}/keepalived_start.lock"
    state: present
  when:
    - ansible_facts.hostname != "bootnode"

    
- shell: |
      make install
  args:
    chdir: "{{ r_download_dir }}/keepalived-{{ keepalived_version }}"
  when:
    - ansible_facts.hostname != "bootnode"
    

    
- name: deploy keepalived service
  template:
    src: keepalived.service.j2
    dest: /etc/systemd/system/keepalived.service
    owner: root
    group: root
    mode: '0644'
  when:
    - ansible_facts.hostname != "bootnode"

    
- name: /etc/keepalived/keepalived.conf to master mlb
  file:
    path: /etc/keepalived
    state: directory
    owner: root
    group: root
    mode: '0755'
  when:
    - ansible_facts.hostname != "bootnode"

    
- name: /etc/keepalived/keepalived.conf to primary mlb
  template:
    src: keepalived.conf.master.j2
    dest: /etc/keepalived/keepalived.conf
    owner: root
    group: root
    mode: '0644'
  when:
    - ansible_facts.hostname is match("mlb1")
    - lb_pos == "Internal"

- name: /etc/keepalived/keepalived.conf to backup mlb
  template:
    src: keepalived.conf.backup.j2
    dest: /etc/keepalived/keepalived.conf
    owner: root
    group: root
    mode: '0644'
  when:
    - ansible_facts.hostname is match("mlb2")
    - lb_pos == "Internal"


- name: /etc/keepalived/keepalived.conf to primary elb
  template:
    src: keepalived.conf.master_frontend.j2
    dest: /etc/keepalived/keepalived.conf
    owner: root
    group: root
    mode: '0644'
  when:
    - ansible_facts.hostname is match("elb1")
    - lb_pos == "Frontend"

- name: /etc/keepalived/keepalived.conf to backup elb
  template:
    src: keepalived.conf.backup_frontend.j2
    dest: /etc/keepalived/keepalived.conf
    owner: root
    group: root
    mode: '0644'
  when:
    - ansible_facts.hostname is match("elb2")
    - lb_pos == "Frontend"


- name: copy /etc/keepalived/master.sh
  template:
    src: master.sh
    dest: /etc/keepalived/master.sh
    owner: root
    group: root
    mode: '0700'
  when:
    - ansible_facts.hostname is match("elb[12]")
    - lb_pos == "Frontend"
    
- name: copy /etc/keepalived/backup.sh
  template:
    src: backup.sh
    dest: /etc/keepalived/backup.sh
    owner: root
    group: root
    mode: '0700'
  when:
    - ansible_facts.hostname is match("elb[12]")
    - lb_pos == "Frontend"

    
- name: just force systemd to reread configs
  systemd:
    daemon_reload: yes
  when:
    - ansible_facts.hostname != "bootnode"

- name: enable and start a keepalived
  systemd:
    name: keepalived
    state: started
    enabled: yes
  when:
    - ansible_facts.hostname != "bootnode"
