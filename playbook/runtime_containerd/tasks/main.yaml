#
# Containerd のダウンロードとインストール
#
- debug: msg="{{ ansible_facts.hostname }}"
#- include_tasks: mkdir_for_download.yaml

#
# mkdir directory for cni
#  flannel などのプラグインの設定ファイルが入る
#
- name: start configuration
  file:
    path: /etc/cni/net.d
    state: directory
    owner: root
    group: root
    mode: '0755'

# 必要なコードのダウンロード
- include_tasks: dl_cni_plugin.yaml
- include_tasks: dl_containerd.yaml
- include_tasks: dl_cri_containerd.yaml
- include_tasks: dl_crictl.yaml
- include_tasks: dl_runc.yaml

##
## master1 でダウンロードが完了したら、master2以降の待機をリリースする
##
- name: Touch the same file, but add/remove some permissions
  file:
    path: "{{ r_download_dir }}/containerd_start.lock"
    state: touch
    mode: u+rw,g-wx,o-rwx  
  when: ansible_facts.hostname is match(download_node)
  
##
## master1 でダウンロードが完了するまで待つ
##
- name: Wait until the lock file is removed
  wait_for:
    path: "{{ r_download_dir }}/containerd_start.lock"
    state: present
  
#- include_vars: /vagrant/playbook/vars/main.yaml

- name: mkdir /opt/cni/bin/
  file:
    path: /opt/cni/bin/
    state: directory
    owner: root
    group: root
    mode: '0755'
  
- name: Configure CNI Networking
  unarchive:
    src: "{{ r_download_dir }}/cni-plugins-linux-amd64-{{ cni_plugins }}.tgz"
    dest: /opt/cni/bin/
    owner: root
    group: root
    mode: '0755'


- name: install containerd
  unarchive:
    src: "{{ r_download_dir }}/containerd-{{ containerd_version }}.linux-amd64.tar.gz"
    dest: /usr/local
    owner: root
    group: root
    mode: '0755'

- name: install crictl
  unarchive:
    src: "{{ r_download_dir }}/crictl-{{ crictl_version }}-linux-amd64.tar.gz"
    dest: /usr/local/bin/
    owner: root
    group: root
    mode: '0755'
    
- copy:
    src: "{{ r_download_dir }}/runc.amd64"
    dest: /usr/local/bin/runc
    owner: root
    group: root
    mode: '0755'

- name: Configure containerd
  file:
    path: /etc/containerd
    state: directory
    owner: root
    group: root
    mode: '0755'

- template:
    src: config.toml
    dest: /etc/containerd
    owner: root
    group: root
    mode: '0644'

- template:
    src: containerd.service
    dest: /etc/systemd/system
    owner: root
    group: root
    mode: '0644'

- name: Start the Worker Services
  systemd:
    name: containerd  
    state: started
    daemon_reload: yes
    enabled: yes
- wait_for:
    timeout: 30

